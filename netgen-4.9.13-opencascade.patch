--- netgen-4.9.13/libsrc/occ/Partition_Inter3d.cxx.orig	2011-11-18 23:09:27.460455800 -0200
+++ netgen-4.9.13/libsrc/occ/Partition_Inter3d.cxx	2011-11-18 23:10:00.513632599 -0200
@@ -243,7 +243,7 @@ static void PutInBounds (const TopoDS_Fa
       Standard_Integer i, nbExt = anExtPS.NbExt();
       Extrema_POnSurf aPOnSurf;
       for (i = 1; i <= nbExt; ++i )
-        if (anExtPS.Value( i ) <= TolE) {
+        if (anExtPS.SquareDistance( i ) <= TolE) {
           aPOnSurf = anExtPS.Point( i );
           break;
         }
--- netgen-4.9.13/libsrc/occ/Partition_Loop2d.cxx.orig	2011-11-18 23:08:47.627242616 -0200
+++ netgen-4.9.13/libsrc/occ/Partition_Loop2d.cxx	2011-11-18 23:09:05.377337631 -0200
@@ -22,7 +22,7 @@
 #include <BRepAdaptor_Surface.hxx>
 #include <BRepAlgo_AsDes.hxx>
 #include <BRepAlgo_FaceRestrictor.hxx>
-#include <BRepOffset_DataMapOfShapeReal.hxx>
+#include <BRepMesh_DataMapOfShapeReal.hxx>
 #include <BRepTopAdaptor_FClass2d.hxx>
 #include <BRep_Builder.hxx>
 #include <BRep_Tool.hxx>
@@ -519,7 +519,7 @@ static void prepareDegen (const TopoDS_E
     DC.Initialize( DegEdge, F );
 
   // avoid intersecting twice the same edge
-  BRepOffset_DataMapOfShapeReal EUMap ( EdgesList.Extent() );
+  BRepMesh_DataMapOfShapeReal EUMap ( EdgesList.Extent() );
 
   Standard_Real U, f, l;
   BRep_Tool::Range (DegEdge, f, l);
--- netgen-4.9.13/libsrc/occ/Partition_Spliter.cxx.orig	2011-11-18 23:10:47.139881742 -0200
+++ netgen-4.9.13/libsrc/occ/Partition_Spliter.cxx	2011-11-18 23:11:02.169962037 -0200
@@ -1169,7 +1169,7 @@ static void findEqual (const TopTools_Li
           for (; j<=nbj && ok; ++j) {
             if (Extrema.IsMin(j)) {
 	      hasMin = Standard_True;
-              ok = Extrema.Value(j) <= tol;
+              ok = Extrema.SquareDistance(j) <= tol;
 	    }
           }
         }
